package object_fecha;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

import javax.swing.JOptionPane;

public class Fecha {
	/*ATRIBUTOS*/
	//private String fecha;
	//private Calendar fecha = Calendar.getInstance();
	private int dia;
	private int mes;
	private int anio;
	private String fecha = "";
	//private SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
	//private Calendar fecha= Calendar.getInstance();;
	//private SimpleDateFormat formato 	= new SimpleDateFormat("dd/MM/yyyy");
	/*ATRIBUTOS*/
	
	/*METODOS*/
	
	/*CONSTRUCTOR*/
	public Fecha(/*int dia, int mes, int anio,*/ String fecha)/* throws ParseException */{
		
		String[] SepararArray = null;
		
		SepararArray = fecha.split("/");
		
		this.dia = Integer.parseInt(SepararArray[0]);
		this.mes = Integer.parseInt(SepararArray[1]);
		this.anio = Integer.parseInt(SepararArray[2]);
		
		this.fecha =  fecha;
		
		//this.dia = dia;
		//this.mes = mes;
		//this.anio =  anio;
		//this.fecha = fecha;
		//this.fecha.setTime(this.formato.parse(this.dia+"/"+this.mes+"/"+this.anio));
	}
	
	/*public Fecha(String fecha) throws ParseException {
		
		 this.fecha.setTime(this.formato.parse(fecha));
		 this.dia = this.fecha.get(Calendar.DATE);
		 this.mes = this.fecha.get(Calendar.MONTH) + 1;
		 this.ano = this.fecha.get(Calendar.YEAR);
	}*/
	
	/*CONSTRUCTOR*/
	
	/*GET*/
	int get_dia() {
		return this.dia;
	}
	
	int get_mes() {
		return this.mes;
	}
	
	int get_anio() {
		return this.anio;
	} 
	
	String get_fecha() {
		return fecha;
	}
	
	/*Calendar get_fecha() {
		return this.fecha;
	}*/
	/*GET*/
	
	/*SET*/
	public int set_dia(int dia) {
		this.dia = dia;
		return dia;
	}
	
	public int set_mes(int mes) {
		this.mes = mes;
		return mes;
	}
	
	public int set_anio(int anio) {
		this.anio = anio;
		return anio;
	}
	
	public String fecha(String fecha) {
		this.fecha = fecha;
		return fecha;
	}
	
	/*public Calendar set_fecha(Calendar fecha) {
		this.fecha = fecha;
		return fecha;
	}*/
	/*SET*/
	
	
	public Date toDate() {
		 GregorianCalendar fecha1 = new GregorianCalendar(anio, mes - 1, dia);
		  this.mes++;
		  Date fecha = fecha1.getTime();
		  return fecha;
	}
	
	 public Calendar toCalendar() throws ParseException {
	        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
	        
	        // Parseamos la cadena fecha a un objeto Date
	        Date fechaDate = sdf.parse(this.fecha);
	        
	        // Creamos un objeto Calendar y le asignamos la fecha
	        Calendar calendario = Calendar.getInstance();
	        calendario.setTime(fechaDate);
	        
	        return calendario;
	    }
	
	public String compararFechas(Fecha fecha2) {
		String comprobar = "";
			if (this.anio == fecha2.anio) {
		    	if(this.mes == fecha2.mes) {
		    		if(this.dia == fecha2.dia) {
		    			comprobar = "igual";
		    		} else if (this.dia > fecha2.dia) {
		    			comprobar = "fecha 1 mayor";
		    		} else {
		    			comprobar = "fecha 1 menor";
		    		} // end dia if
		    	} else if(this.mes > fecha2.mes) {
		    		comprobar = "fecha 1 mayor";
		    	} else {
		    		comprobar = "fecha 1 menor";
		    	} // end mes if
		    } else if (this.anio > fecha2.anio) {
	    		comprobar = "fecha 1 mayor";
		    } else {
		    	comprobar = "fecha 1 menor";
		    } // end ano if
		    return comprobar;
	}
	
	public boolean comprobarMes(){
		if((this.mes >= 1) && (this.mes <= 12)){
			return true;
		}else{
			return false;
		}
	}

	public boolean comprobarDia() {
	    GregorianCalendar calendar = new GregorianCalendar();
	    int dias[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
	    if (calendar.isLeapYear(this.anio)) {
	        dias[2] = 29;
	    }
	    return (this.dia >= 1) && (this.dia <= dias[this.mes]);
	}
	
	public boolean  comprobarFechas() {
		boolean fecha = true;
		if(!this.comprobarDia()) {
			 fecha = false;
		}
		if(!this.comprobarMes()) {
			 fecha = false;
		}
		return fecha;
	}
	
	/*public int prova(Fecha fecha2) {
		 long diferenciaEnMilisegundos = Math.abs(this.fecha.getTimeInMillis() - fecha2.fecha.getTimeInMillis());
		 int diferenciaEnDias = (int) (diferenciaEnMilisegundos / (1000 * 60 * 60 * 24));
		 return diferenciaEnDias;
		
	}*/
	
	/*public int RestarFechas (Fecha fecha2) {
		long f1 = this.fecha.getTimeInMillis();
		long f2 = fecha2.fecha.getTimeInMillis();
		
		int resultado = (int) (f1 -f2);
		resultado = resultado /  (1000 * 60 * 60 * 24);
		
		return resultado;
	}*/
	
	
	public String toString() {
	    return this.dia + "/" + this.mes + "/" + this.anio;
	}
	/*METODOS*/
}
